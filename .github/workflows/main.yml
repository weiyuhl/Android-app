name: Build Kotlin Android App

on:
  push:
    branches:
      - main  # 监听推送到 main 分支
  pull_request:
    branches:
      - main  # 监听从其他分支提交的 PR

jobs:
  build:
    runs-on: ubuntu-latest  # 在 Ubuntu 环境下执行

    steps:
    # 1. 设置 JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    # 2. 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # 3. 创建 Kotlin 项目
    - name: Generate Kotlin project
      run: |
        mkdir kotlin-example-app
        cd kotlin-example-app

        # 创建 settings.gradle 文件
        cat > settings.gradle <<EOF
        pluginManagement {
          repositories {
            google()
            mavenCentral()
          }
        }
        dependencyResolutionManagement {
          repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
          repositories {
            google()
            mavenCentral()
          }
        }
        rootProject.name = "KotlinExampleApp"
        EOF

        # 创建 build.gradle 文件
        cat > build.gradle <<EOF
        plugins {
          id 'com.android.application' version '8.1.2'
          id 'org.jetbrains.kotlin.android' version '1.9.10'
        }

        android {
          compileSdkVersion 33
          defaultConfig {
            applicationId "com.example.app"
            minSdkVersion 21
            targetSdkVersion 33
            versionCode 1
            versionName "1.0"
            namespace 'com.example.app'  # 必须指定命名空间
          }
          buildTypes {
            release {
              minifyEnabled false
              proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
          }
        }

        repositories {
          google()
          mavenCentral()
        }

        dependencies {
          implementation "androidx.core:core-ktx:1.12.0"
          implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
        }
        EOF

        # 初始化 Gradle Wrapper
        gradle wrapper --gradle-version 8.1.1

    # 4. 构建 APK
    - name: Build APK
      run: |
        cd kotlin-example-app
        ./gradlew assembleRelease

    # 5. 上传生成的 APK
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: kotlin-example-app-apk
        path: kotlin-example-app/app/build/outputs/apk/release/app-release.apk

    # 6. 完成工作
    - name: Complete workflow
      run: echo "Build completed successfully."
